

URL:  https://leetcode.com/problems/missing-number/


class Solution:
    def missingNumber(self, nums: List[int]) -> int:
        '''
        l=len(nums)
        nums.sort()
        c=0

        for i in nums:
            if i!=c:
                return c
            c+=1
        return c
'''
        
         
        '''
        n=len(nums)
        sumofn=n*(n+1)//2

        sumofnums=sum(nums)
        missingnum=sumofn-sumofnums
        return missingnum

        '''



        '''
        # TC: O(N) and SC:O(1)
        xor1 = 0
        xor2 = 0
        N=len(nums)
        for i in range(N):
            xor2 = xor2 ^ nums[i]  # XOR of array elements
            #xor1 = xor1 ^ (i)  # XOR up to [1...N-1]
    
        xor1 = xor1 ^ N  # XOR up to [1...N]

        return xor1 ^ xor2  # the missing number
        '''

        N=len(nums)
        if N==1:
            return N
        

        h=[0]*(N+1)

        for i in range(N):
            h[nums[i]]+=1

        for i in range(1,N+1):
            if h[i]==0:
                return i

        return -1
